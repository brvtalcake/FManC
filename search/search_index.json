{"config":{"lang":["ar","da","ja","en","fr","de","pt","du","ro","fi","sv","th","tr","hu","vi","it","ru","es"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Wiki home","text":"<p>extra_css:   - stylesheets/syntax.css markdown_extensions:   - pymdownx.highlight:       anchor_linenums: true       auto_title: true   - pymdownx.superfences</p>"},{"location":"api_doc/filesystem_api/","title":"Filesystem API reference","text":""},{"location":"api_doc/filesystem_api/#summary","title":"Summary","text":"<ul> <li>Functions<ul> <li>FMC_dirExists</li> <li>FMC_isDir</li> </ul> </li> </ul>"},{"location":"api_doc/filesystem_api/#functions","title":"Functions","text":""},{"location":"api_doc/filesystem_api/#fmc_direxists","title":"FMC_dirExists","text":"Function signatureExample 1Example 2 <pre><code>int FMC_dirExists(const char *path); </code></pre> <pre><code>if (FMC_dirExists(\"test/main.c\"))\n{\nFILE *src_file = fopen(\"test/main.c\", \"rb\");\n// do something with it\n}\nelse\n// ...\n</code></pre> <pre><code>char directory[128] = \"C:\\\\Users\\\\YourFolder\\\\\";\nif (FMC_dirExists(directory))\n{\nsystem(/* insert a command here to do whatever you want */);\n}\nelse\n// ...\n</code></pre> <p>Parameters</p> <p><code>path</code> : the path whose you want to check the existence. The file can either be a regular file, a directory, or any valid device, socket... Multi-byte caracters are not supported.</p> <p>Return value </p> <p>The function returns 1 if the path effectively exists, 0 otherwise.</p> <p>Description</p> <p>This function is a small wrapper around the std::filesystem C++ library.</p>"},{"location":"api_doc/filesystem_api/#fmc_isdir","title":"FMC_isDir","text":"Function signatureExample 1 <pre><code>int FMC_isDir(const char *path);\n</code></pre> <pre><code>if(FMC_isDir(\"/home/you/meme_folder/\") == 0)\n{\nsystem(\"mkdir /home/you/meme_folder\");\n}\n</code></pre> <p>Parameters</p> <p><code>path</code> : the path whose you want to check if it's a directory. Multi-byte caracters are not supported.</p> <p>Return value</p> <p>The function returns 1 if the path effectively exists, 0 if not, and -1 if the directory doesn't exist or if an error occured.</p> <p>Description</p> <p>This function is a small wrapper around the std::filesystem C++ library.</p>"}]}
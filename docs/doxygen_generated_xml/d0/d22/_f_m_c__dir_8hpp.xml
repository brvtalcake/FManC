<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="d0/d22/_f_m_c__dir_8hpp" kind="file" language="C++">
    <compoundname>FMC_dir.hpp</compoundname>
    <includes local="no">cstddef</includes>
    <includedby refid="d2/d8a/_f_m_c__dir_8cpp" local="yes">src/cpp/FMC_dir/FMC_dir.cpp</includedby>
    <includedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp" local="yes">src/cpp/FMC_dir/FMC_dir_wrapper.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/cpp/FMC_dir/FMC_dir.hpp</label>
        <link refid="d0/d22/_f_m_c__dir_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/cpp/FMC_dir/FMC_dir.cpp</label>
        <link refid="d2/d8a/_f_m_c__dir_8cpp"/>
      </node>
      <node id="1">
        <label>src/cpp/FMC_dir/FMC_dir.hpp</label>
        <link refid="d0/d22/_f_m_c__dir_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/cpp/FMC_dir/FMC_dir_wrapper.cpp</label>
        <link refid="d8/ddf/_f_m_c__dir__wrapper_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1aaf5d595ffddd8346cd60550fb22f76a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_dirExists_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_dirExists_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="32" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="38" bodyend="41" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="32" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a9a4c6139328fac1b7939b294d82fe1f5" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="35" endline="38">FMC_dirExists</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1a0cdb005d8ce8d0317bddc013cf743484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * FMC_getAbsolutePath_</definition>
        <argsstring>(char *path, char *buffer, const size_t size)</argsstring>
        <name>FMC_getAbsolutePath_</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="45" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="157" bodyend="170" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="45" declcolumn="6"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1aeeebe9211250e7cd0886dae14a766234" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="92" endline="95">FMC_getAbsolutePath</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1ae8f5ab29f2f72767e8a20083d58cdf9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * FMC_getCurrentPath_</definition>
        <argsstring>(char *path, const size_t size)</argsstring>
        <name>FMC_getCurrentPath_</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="44" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="142" bodyend="155" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="44" declcolumn="6"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a708f25a8190cd874ce947f6ed79d37a2" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="87" endline="90">FMC_getCurrentPath</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1a67662caff0d4650b4c02b339c26a74e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isBlock_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isBlock_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="36" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="70" bodyend="77" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="36" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a2f6fca81fe2598bf994fd7d4916326ec" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="55" endline="58">FMC_isBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1adc3a2ee135c9927fd21e6d106f94dd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isCharFile_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isCharFile_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="37" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="79" bodyend="86" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="37" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a970ecd03b114fe0850fe54756a5ea945" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="60" endline="63">FMC_isCharFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1a428cb6fcc384b2da41979b8a7a636b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isDir_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isDir_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="33" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="43" bodyend="50" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="33" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1ae669a6af87b2fbc6e13cd948468bc288" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="40" endline="43">FMC_isDir</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1a0122f9dd710ccc38324fb9fc5affa1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isEmpty_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isEmpty_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="42" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="128" bodyend="135" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="42" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a08a8be610078b0ff87221f3d93538d90" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="80" endline="83">FMC_isEmpty</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1a491c73d926fea63ac3dd81085e5ff3e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isFIFO_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isFIFO_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="39" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="97" bodyend="104" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="39" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1adb5c0f21b42c41182dbbd37d4a5d64c0" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="70" endline="73">FMC_isFIFO</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1a90ec35a5fd18475fc1427fa977e7d961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isOther_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isOther_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="40" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="106" bodyend="113" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="40" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a4cd701f3b42963d900457e94adf2f414" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="75" endline="78">FMC_isOther</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1ad6cbcaa0f3e5275320aacd68d8c9b250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isRegFile_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isRegFile_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="34" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="52" bodyend="59" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="34" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a54e1ee800d714079843023928ecb3913" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="45" endline="48">FMC_isRegFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1aec75555a8a1096ed6616b513e8d27b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isSocket_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isSocket_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="38" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="88" bodyend="95" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="38" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a0502ef511d4b4bca0831ccd258c87e41" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="65" endline="68">FMC_isSocket</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d22/_f_m_c__dir_8hpp_1a92183d7ac82222d73caebc4b7443f1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isSymLink_</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isSymLink_</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir.hpp" line="35" column="5" bodyfile="src/cpp/FMC_dir/FMC_dir.cpp" bodystart="61" bodyend="68" declfile="src/cpp/FMC_dir/FMC_dir.hpp" declline="35" declcolumn="5"/>
        <referencedby refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1acbe23cfd797b2c086ab91d21160ad877" compoundref="d8/ddf/_f_m_c__dir__wrapper_8cpp" startline="50" endline="53">FMC_isSymLink</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">MIT<sp/>License</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(c)<sp/>2022-2023<sp/>Axel<sp/>PASCON</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="8"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="9"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="10"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="11"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="12"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="15"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="20"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="21"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="22"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMC_DIR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMC_DIR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1aaf5d595ffddd8346cd60550fb22f76a6" kindref="member">FMC_dirExists_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1a428cb6fcc384b2da41979b8a7a636b95" kindref="member">FMC_isDir_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1ad6cbcaa0f3e5275320aacd68d8c9b250" kindref="member">FMC_isRegFile_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1a92183d7ac82222d73caebc4b7443f1e0" kindref="member">FMC_isSymLink_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1a67662caff0d4650b4c02b339c26a74e8" kindref="member">FMC_isBlock_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1adc3a2ee135c9927fd21e6d106f94dd60" kindref="member">FMC_isCharFile_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1aec75555a8a1096ed6616b513e8d27b11" kindref="member">FMC_isSocket_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1a491c73d926fea63ac3dd81085e5ff3e7" kindref="member">FMC_isFIFO_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1a90ec35a5fd18475fc1427fa977e7d961" kindref="member">FMC_isOther_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//char<sp/>*FMC_readSymlink_(char<sp/>*path_sym,<sp/>const<sp/>char<sp/>*<sp/>path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d22/_f_m_c__dir_8hpp_1a0122f9dd710ccc38324fb9fc5affa1bd" kindref="member">FMC_isEmpty_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>FMC_createDir_(const<sp/>char<sp/>*path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d0/d22/_f_m_c__dir_8hpp_1ae8f5ab29f2f72767e8a20083d58cdf9a" kindref="member">FMC_getCurrentPath_</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d0/d22/_f_m_c__dir_8hpp_1a0cdb005d8ce8d0317bddc013cf743484" kindref="member">FMC_getAbsolutePath_</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FMC_DIR_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/cpp/FMC_dir/FMC_dir.hpp"/>
  </compounddef>
</doxygen>

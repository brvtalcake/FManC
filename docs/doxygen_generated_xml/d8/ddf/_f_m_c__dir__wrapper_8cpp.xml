<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="d8/ddf/_f_m_c__dir__wrapper_8cpp" kind="file" language="C++">
    <compoundname>FMC_dir_wrapper.cpp</compoundname>
    <includes refid="de/d04/_f_m_c__wrapper_8h" local="yes">../FMC_wrapper.h</includes>
    <includes refid="d0/d22/_f_m_c__dir_8hpp" local="yes">FMC_dir.hpp</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="7">
        <label>FMC_dir.hpp</label>
        <link refid="d0/d22/_f_m_c__dir_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/cpp/FMC_dir/FMC_dir_wrapper.cpp</label>
        <link refid="d8/ddf/_f_m_c__dir__wrapper_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../FMC_wrapper.h</label>
        <link refid="de/d04/_f_m_c__wrapper_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>FMC_attributes.h</label>
        <link refid="d4/d62/_f_m_c__attributes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../general/preprocessor/FMC_macros.h</label>
        <link refid="d0/d07/_f_m_c__macros_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>FMC_platform.h</label>
        <link refid="d0/dc4/_f_m_c__platform_8h"/>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a9a4c6139328fac1b7939b294d82fe1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_dirExists</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_dirExists</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a directory exists. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path whose existence is to be checked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the directory exists. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the directory does not exist. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="35" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="35" bodyend="38"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1aaf5d595ffddd8346cd60550fb22f76a6" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="38" endline="41">FMC_dirExists_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1aeeebe9211250e7cd0886dae14a766234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * FMC_getAbsolutePath</definition>
        <argsstring>(char *path, char *buffer, const size_t size)</argsstring>
        <name>FMC_getAbsolutePath</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function converts a relative path into an absolute one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to convert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory buffer to store the absolute path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the memory buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the memory buffer. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the buffer after the call if the function succeeded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="92" column="7" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="92" bodyend="95"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1a0cdb005d8ce8d0317bddc013cf743484" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="157" endline="170">FMC_getAbsolutePath_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a708f25a8190cd874ce947f6ed79d37a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * FMC_getCurrentPath</definition>
        <argsstring>(char *path, const size_t size)</argsstring>
        <name>FMC_getCurrentPath</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function is equivalent to $PWD in bash. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory buffer to store the current path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the memory buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the memory buffer. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to path after the call if the function succeeded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="87" column="7" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="87" bodyend="90"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1ae8f5ab29f2f72767e8a20083d58cdf9a" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="142" endline="155">FMC_getCurrentPath_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a2f6fca81fe2598bf994fd7d4916326ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isBlock</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isBlock</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is a block device. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is a block device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not a block device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="55" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="55" bodyend="58"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1a67662caff0d4650b4c02b339c26a74e8" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="70" endline="77">FMC_isBlock_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a970ecd03b114fe0850fe54756a5ea945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isCharFile</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isCharFile</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is a character device. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is a character device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not a character device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="60" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="60" bodyend="63"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1adc3a2ee135c9927fd21e6d106f94dd60" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="79" endline="86">FMC_isCharFile_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1ae669a6af87b2fbc6e13cd948468bc288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isDir</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isDir</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is a directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not a directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="40" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="40" bodyend="43"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1a428cb6fcc384b2da41979b8a7a636b95" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="43" endline="50">FMC_isDir_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a08a8be610078b0ff87221f3d93538d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isEmpty</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isEmpty</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a directory is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the directory is empty. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the directory is not empty. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="80" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="80" bodyend="83"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1a0122f9dd710ccc38324fb9fc5affa1bd" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="128" endline="135">FMC_isEmpty_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1adb5c0f21b42c41182dbbd37d4a5d64c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isFIFO</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isFIFO</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is a FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is a FIFO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not a FIFO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="70" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="70" bodyend="73"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1a491c73d926fea63ac3dd81085e5ff3e7" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="97" endline="104">FMC_isFIFO_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a4cd701f3b42963d900457e94adf2f414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isOther</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isOther</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is of an unknown type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is of an unknown type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not of an unknown type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="75" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="75" bodyend="78"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1a90ec35a5fd18475fc1427fa977e7d961" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="106" endline="113">FMC_isOther_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a54e1ee800d714079843023928ecb3913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isRegFile</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isRegFile</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is a regular file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is a regular file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not a regular file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="45" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="45" bodyend="48"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1ad6cbcaa0f3e5275320aacd68d8c9b250" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="52" endline="59">FMC_isRegFile_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a0502ef511d4b4bca0831ccd258c87e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isSocket</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isSocket</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is a socket. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is a socket. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not a socket. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="65" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="65" bodyend="68"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1aec75555a8a1096ed6616b513e8d27b11" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="88" endline="95">FMC_isSocket_</references>
      </memberdef>
      <memberdef kind="function" id="d8/ddf/_f_m_c__dir__wrapper_8cpp_1acbe23cfd797b2c086ab91d21160ad877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FMC_isSymLink</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FMC_isSymLink</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a path is a symbolic link. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Axel PASCON </para>
</simplesect>
<simplesect kind="date"><para>2023</para>
</simplesect>
This function is a wrapper around the C++ filesystem library assciated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is a symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the path is not a symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occured. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" line="50" column="6" bodyfile="src/cpp/FMC_dir/FMC_dir_wrapper.cpp" bodystart="50" bodyend="53"/>
        <references refid="d2/d8a/_f_m_c__dir_8cpp_1a92183d7ac82222d73caebc4b7443f1e0" compoundref="d2/d8a/_f_m_c__dir_8cpp" startline="61" endline="68">FMC_isSymLink_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">MIT<sp/>License</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(c)<sp/>2022-2023<sp/>Axel<sp/>PASCON</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="8"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="9"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="10"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="11"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="12"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="15"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="20"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="21"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="22"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../FMC_wrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d22/_f_m_c__dir_8hpp" kindref="compound">FMC_dir.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a9a4c6139328fac1b7939b294d82fe1f5" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a9a4c6139328fac1b7939b294d82fe1f5" kindref="member">FMC_dirExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1aaf5d595ffddd8346cd60550fb22f76a6" kindref="member">FMC_dirExists_</ref>(path);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1ae669a6af87b2fbc6e13cd948468bc288" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1ae669a6af87b2fbc6e13cd948468bc288" kindref="member">FMC_isDir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1a428cb6fcc384b2da41979b8a7a636b95" kindref="member">FMC_isDir_</ref>(path);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a54e1ee800d714079843023928ecb3913" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a54e1ee800d714079843023928ecb3913" kindref="member">FMC_isRegFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1ad6cbcaa0f3e5275320aacd68d8c9b250" kindref="member">FMC_isRegFile_</ref>(path);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1acbe23cfd797b2c086ab91d21160ad877" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1acbe23cfd797b2c086ab91d21160ad877" kindref="member">FMC_isSymLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1a92183d7ac82222d73caebc4b7443f1e0" kindref="member">FMC_isSymLink_</ref>(path);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a2f6fca81fe2598bf994fd7d4916326ec" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a2f6fca81fe2598bf994fd7d4916326ec" kindref="member">FMC_isBlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1a67662caff0d4650b4c02b339c26a74e8" kindref="member">FMC_isBlock_</ref>(path);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a970ecd03b114fe0850fe54756a5ea945" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a970ecd03b114fe0850fe54756a5ea945" kindref="member">FMC_isCharFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1adc3a2ee135c9927fd21e6d106f94dd60" kindref="member">FMC_isCharFile_</ref>(path);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a0502ef511d4b4bca0831ccd258c87e41" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a0502ef511d4b4bca0831ccd258c87e41" kindref="member">FMC_isSocket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1aec75555a8a1096ed6616b513e8d27b11" kindref="member">FMC_isSocket_</ref>(path);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1adb5c0f21b42c41182dbbd37d4a5d64c0" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1adb5c0f21b42c41182dbbd37d4a5d64c0" kindref="member">FMC_isFIFO</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1a491c73d926fea63ac3dd81085e5ff3e7" kindref="member">FMC_isFIFO_</ref>(path);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a4cd701f3b42963d900457e94adf2f414" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a4cd701f3b42963d900457e94adf2f414" kindref="member">FMC_isOther</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1a90ec35a5fd18475fc1427fa977e7d961" kindref="member">FMC_isOther_</ref>(path);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a08a8be610078b0ff87221f3d93538d90" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a08a8be610078b0ff87221f3d93538d90" kindref="member">FMC_isEmpty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1a0122f9dd710ccc38324fb9fc5affa1bd" kindref="member">FMC_isEmpty_</ref>(path);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//FMC_SHARED<sp/>int<sp/>FMC_createDir_(const<sp/>char<sp/>*path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a708f25a8190cd874ce947f6ed79d37a2" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1a708f25a8190cd874ce947f6ed79d37a2" kindref="member">FMC_getCurrentPath</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1ae8f5ab29f2f72767e8a20083d58cdf9a" kindref="member">FMC_getCurrentPath_</ref>(path,<sp/>size);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1aeeebe9211250e7cd0886dae14a766234" refkind="member"><highlight class="normal">FMC_SHARED<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d8/ddf/_f_m_c__dir__wrapper_8cpp_1aeeebe9211250e7cd0886dae14a766234" kindref="member">FMC_getAbsolutePath</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d8a/_f_m_c__dir_8cpp_1a0cdb005d8ce8d0317bddc013cf743484" kindref="member">FMC_getAbsolutePath_</ref>(path,<sp/>buffer,<sp/>size);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/cpp/FMC_dir/FMC_dir_wrapper.cpp"/>
  </compounddef>
</doxygen>
